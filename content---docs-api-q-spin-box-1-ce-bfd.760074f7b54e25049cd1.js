(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{113:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"rightToc",(function(){return r})),n.d(t,"default",(function(){return c}));n(0);var i=n(173);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p={sidebar_label:"QSpinBox",title:"QSpinBox"},r=[{value:"Example",id:"example",children:[]},{value:"new QSpinBox(parent?)",id:"new-qspinboxparent",children:[]},{value:"Static Methods",id:"static-methods",children:[]},{value:"Instance Properties",id:"instance-properties",children:[]},{value:"Instance Methods",id:"instance-methods",children:[{value:"spinBox.setValue(val)",id:"spinboxsetvalueval",children:[]},{value:"spinBox.setRange(minimum, maximum)",id:"spinboxsetrangeminimum-maximum",children:[]},{value:"spinBox.setPrefix(prefix)",id:"spinboxsetprefixprefix",children:[]},{value:"spinBox.setSuffix(suffix)",id:"spinboxsetsuffixsuffix",children:[]},{value:"spinBox.setSingleStep(val)",id:"spinboxsetsinglestepval",children:[]},{value:"spinBox.cleanText()",id:"spinboxcleantext",children:[]},{value:"spinBox.minimum()",id:"spinboxminimum",children:[]},{value:"spinBox.maximum()",id:"spinboxmaximum",children:[]},{value:"spinBox.value()",id:"spinboxvalue",children:[]}]}],l={rightToc:r},s="wrapper";function c(e){var t=e.components,n=o(e,["components"]);return Object(i.b)(s,a({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Create and control spin box widgets.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"This class is a JS wrapper around Qt's ",Object(i.b)("a",a({parentName:"strong"},{href:"https://doc.qt.io/qt-5/qspinbox.html"}),"QSpinBox class"))),Object(i.b)("p",null,"A ",Object(i.b)("inlineCode",{parentName:"p"},"QSpinBox")," provides ability to add and manipulate native spin box widgets."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"QSpinBox inherits from ",Object(i.b)("a",a({parentName:"strong"},{href:"/docs/api/NodeWidget"}),"NodeWidget"))),Object(i.b)("h3",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",a({parentName:"pre"},{className:"language-javascript"}),'const { QSpinBox } = require("@nodegui/nodegui");\n\nconst spinBox = new QSpinBox();\n')),Object(i.b)("h3",{id:"new-qspinboxparent"},Object(i.b)("inlineCode",{parentName:"h3"},"new QSpinBox(parent?)")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"parent")," NodeWidget (",Object(i.b)("em",{parentName:"li"},"optional"),"). Any widget inheriting from NodeWidget can be passed as a parent. This will make this widget, the child of the parent widget.")),Object(i.b)("h2",{id:"static-methods"},"Static Methods"),Object(i.b)("p",null,"QSpinBox can access all the static methods defined in ",Object(i.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget")),Object(i.b)("h2",{id:"instance-properties"},"Instance Properties"),Object(i.b)("p",null,"QSpinBox can access all the instance properties defined in ",Object(i.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget")),Object(i.b)("h2",{id:"instance-methods"},"Instance Methods"),Object(i.b)("p",null,"QSpinBox can access all the instance methods defined in ",Object(i.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget"),". Additionally it also has the following instance methods:"),Object(i.b)("h3",{id:"spinboxsetvalueval"},Object(i.b)("inlineCode",{parentName:"h3"},"spinBox.setValue(val)")),Object(i.b)("p",null,"Sets the current value of the spinBox. It calls the native method ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qspinbox.html#value-prop"}),"QSpinBox: setValue"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"val")," number - Set the value as current value")),Object(i.b)("h3",{id:"spinboxsetrangeminimum-maximum"},Object(i.b)("inlineCode",{parentName:"h3"},"spinBox.setRange(minimum, maximum)")),Object(i.b)("p",null,"Sets the min/max value of the spinBox. It calls the native method ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qspinbox.html#setRange"}),"QSpinBox: setRange"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"max")," number - Set the value as max value of the progress bar.")),Object(i.b)("h3",{id:"spinboxsetprefixprefix"},Object(i.b)("inlineCode",{parentName:"h3"},"spinBox.setPrefix(prefix)")),Object(i.b)("p",null,"Sets the prefix of the spinBox. It calls the native method ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qspinbox.html#prefix-prop"}),"QSpinBox: setPrefix"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"prefix")," string - Specifies prefix content shows before the spinBox value. ",Object(i.b)("a",a({parentName:"li"},{href:"/docs/api/QtEnums"}),"Prefix is an enum from Qt"))),Object(i.b)("h3",{id:"spinboxsetsuffixsuffix"},Object(i.b)("inlineCode",{parentName:"h3"},"spinBox.setSuffix(suffix)")),Object(i.b)("p",null,"Sets the suffix of the spinBox. It calls the native method ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qspinbox.html#suffix-prop"}),"QSpinBox: setSuffix"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"suffix")," string - Specifies suffix content shows after the spinBox value. ",Object(i.b)("a",a({parentName:"li"},{href:"/docs/api/QtEnums"}),"Suffix is an enum from Qt"))),Object(i.b)("h3",{id:"spinboxsetsinglestepval"},Object(i.b)("inlineCode",{parentName:"h3"},"spinBox.setSingleStep(val)")),Object(i.b)("p",null,"Sets the single step value of the spinBox. It calls the native method ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qspinbox.html#singleStep-prop"}),"QSpinBox: setSingleStep"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"val")," number - Specifies amount value changes with each step. ",Object(i.b)("a",a({parentName:"li"},{href:"/docs/api/QtEnums"}),"Suffix is an enum from Qt"))),Object(i.b)("h3",{id:"spinboxcleantext"},Object(i.b)("inlineCode",{parentName:"h3"},"spinBox.cleanText()")),Object(i.b)("p",null,"Returns the text content (String) of the spinBox excluding any prefix, suffix, or leading or trailing whitespace. It calls the native method ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qspinbox.html#minimum-prop"}),"QSpinBox: value"),"."),Object(i.b)("h3",{id:"spinboxminimum"},Object(i.b)("inlineCode",{parentName:"h3"},"spinBox.minimum()")),Object(i.b)("p",null,"Returns the minimum value (Number) of the spinBox. It calls the native method ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qspinbox.html#minimum-prop"}),"QSpinBox: value"),"."),Object(i.b)("h3",{id:"spinboxmaximum"},Object(i.b)("inlineCode",{parentName:"h3"},"spinBox.maximum()")),Object(i.b)("p",null,"Returns the maximum value (Number) of the spinBox. It calls the native method ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qspinbox.html#maximum-prop"}),"QSpinBox: value"),"."),Object(i.b)("h3",{id:"spinboxvalue"},Object(i.b)("inlineCode",{parentName:"h3"},"spinBox.value()")),Object(i.b)("p",null,"Returns the current value (Number) of the spinBox. It calls the native method ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qspinbox.html#value-prop"}),"QSpinBox: value"),"."))}c.isMDXComponent=!0},173:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return b}));var i=n(0),a=n.n(i),o=a.a.createContext({}),p=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},r=function(e){var t=p(e.components);return a.a.createElement(o.Provider,{value:t},e.children)};var l="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},c=Object(i.forwardRef)((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,l=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&-1===t.indexOf(i)&&(n[i]=e[i]);return n}(e,["components","mdxType","originalType","parentName"]),c=p(n),b=i,u=c[r+"."+b]||c[b]||s[b]||o;return n?a.a.createElement(u,Object.assign({},{ref:t},l,{components:n})):a.a.createElement(u,Object.assign({},{ref:t},l))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,p=new Array(o);p[0]=c;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[l]="string"==typeof e?e:i,p[1]=r;for(var b=2;b<o;b++)p[b]=n[b];return a.a.createElement.apply(null,p)}return a.a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);