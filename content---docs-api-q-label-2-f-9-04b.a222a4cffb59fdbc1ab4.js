(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{173:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s}));var a=n(0),l=n.n(a),r=l.a.createContext({}),i=function(e){var t=l.a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},o=function(e){var t=i(e.components);return l.a.createElement(r.Provider,{value:t},e.children)};var b="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},p=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,b=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),p=i(n),s=a,d=p[o+"."+s]||p[s]||c[s]||r;return n?l.a.createElement(d,Object.assign({},{ref:t},b,{components:n})):l.a.createElement(d,Object.assign({},{ref:t},b))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[b]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<r;s++)i[s]=n[s];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return p}));n(0);var a=n(173);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i={sidebar_label:"QLabel",title:"QLabel"},o=[{value:"Example",id:"example",children:[]},{value:"new QLabel(parent?)",id:"new-qlabelparent",children:[]},{value:"Static Methods",id:"static-methods",children:[]},{value:"Instance Properties",id:"instance-properties",children:[{value:"label.pixmap",id:"labelpixmap",children:[]},{value:"label.text",id:"labeltext",children:[]}]},{value:"Instance Methods",id:"instance-methods",children:[{value:"label.setText(text)",id:"labelsettexttext",children:[]},{value:"label.setWordWrap(on)",id:"labelsetwordwrapon",children:[]},{value:"label.setPixmap(pixMap)",id:"labelsetpixmappixmap",children:[]}]}],b={rightToc:o},c="wrapper";function p(e){var t=e.components,n=r(e,["components"]);return Object(a.b)(c,l({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Create and control text.")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"This class is a JS wrapper around Qt's ",Object(a.b)("a",l({parentName:"strong"},{href:"https://doc.qt.io/qt-5/qlabel.html"}),"QLabel class"))),Object(a.b)("p",null,"A ",Object(a.b)("inlineCode",{parentName:"p"},"QLabel")," provides ability to add and manipulate text."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"QLabel inherits from ",Object(a.b)("a",l({parentName:"strong"},{href:"/docs/api/NodeWidget"}),"NodeWidget"))),Object(a.b)("h3",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-javascript"}),'const { QLabel } = require("@nodegui/nodegui");\n\nconst label = new QLabel();\nlabel.setText("Hello");\n')),Object(a.b)("h3",{id:"new-qlabelparent"},Object(a.b)("inlineCode",{parentName:"h3"},"new QLabel(parent?)")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"parent")," NodeWidget (",Object(a.b)("em",{parentName:"li"},"optional"),"). Any widget inheriting from NodeWidget can be passed as a parent. This will make this widget, the child of the parent widget.")),Object(a.b)("h2",{id:"static-methods"},"Static Methods"),Object(a.b)("p",null,"QLabel can access all the static methods defined in ",Object(a.b)("a",l({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget")),Object(a.b)("h2",{id:"instance-properties"},"Instance Properties"),Object(a.b)("p",null,"QLabel can access all the instance properties defined in ",Object(a.b)("a",l({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget"),". Additionally it also has the following instance properties:"),Object(a.b)("h3",{id:"labelpixmap"},Object(a.b)("inlineCode",{parentName:"h3"},"label.pixmap")),Object(a.b)("p",null,"The pixmap currently set on this label."),Object(a.b)("h3",{id:"labeltext"},Object(a.b)("inlineCode",{parentName:"h3"},"label.text")),Object(a.b)("p",null,"the current text set on the label."),Object(a.b)("h2",{id:"instance-methods"},"Instance Methods"),Object(a.b)("p",null,"QLabel can access all the instance methods defined in ",Object(a.b)("a",l({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget"),". Additionally it also has the following instance methods:"),Object(a.b)("h3",{id:"labelsettexttext"},Object(a.b)("inlineCode",{parentName:"h3"},"label.setText(text)")),Object(a.b)("p",null,"Sets the given text to the label."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"text")," string")),Object(a.b)("h3",{id:"labelsetwordwrapon"},Object(a.b)("inlineCode",{parentName:"h3"},"label.setWordWrap(on)")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"on")," boolean - If true it sets wordwrap on the label")),Object(a.b)("h3",{id:"labelsetpixmappixmap"},Object(a.b)("inlineCode",{parentName:"h3"},"label.setPixmap(pixMap)")),Object(a.b)("p",null,"Images in the form of a pixmap can be set as the label content"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"pixMap")," ",Object(a.b)("a",l({parentName:"li"},{href:"/docs/api/QPixmap"}),"QPixmap")," - Allows to set image content in the form of a QPixmap on the label")))}p.isMDXComponent=!0}}]);