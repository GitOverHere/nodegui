(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{161:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return d}));var c=n(0),a=n.n(c),r=a.a.createContext({}),o=function(e){var t=a.a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},i=function(e){var t=o(e.components);return a.a.createElement(r.Provider,{value:t},e.children)};var l="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=Object(c.forwardRef)((function(e,t){var n=e.components,c=e.mdxType,r=e.originalType,i=e.parentName,l=function(e,t){var n={};for(var c in e)Object.prototype.hasOwnProperty.call(e,c)&&-1===t.indexOf(c)&&(n[c]=e[c]);return n}(e,["components","mdxType","originalType","parentName"]),h=o(n),d=c,p=h[i+"."+d]||h[d]||b[d]||r;return n?a.a.createElement(p,Object.assign({},{ref:t},l,{components:n})):a.a.createElement(p,Object.assign({},{ref:t},l))}));function d(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var r=n.length,o=new Array(r);o[0]=h;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i[l]="string"==typeof e?e:c,o[1]=i;for(var d=2;d<r;d++)o[d]=n[d];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},71:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return h}));n(0);var c=n(161);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var c in n)Object.prototype.hasOwnProperty.call(n,c)&&(e[c]=n[c])}return e}).apply(this,arguments)}function r(e,t){if(null==e)return{};var n,c,a=function(e,t){if(null==e)return{};var n,c,a={},r=Object.keys(e);for(c=0;c<r.length;c++)n=r[c],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(c=0;c<r.length;c++)n=r[c],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o={sidebar_label:"QCheckBox",title:"QCheckBox"},i=[{value:"Example",id:"example",children:[]},{value:"new QCheckBox(parent?)",id:"new-qcheckboxparent",children:[]},{value:"Static Methods",id:"static-methods",children:[]},{value:"Instance Properties",id:"instance-properties",children:[]},{value:"Instance Methods",id:"instance-methods",children:[{value:"checkbox.setText(text)",id:"checkboxsettexttext",children:[]},{value:"checkbox.isChecked()",id:"checkboxischecked",children:[]},{value:"checkbox.setChecked(check)",id:"checkboxsetcheckedcheck",children:[]}]}],l={rightToc:i},b="wrapper";function h(e){var t=e.components,n=r(e,["components"]);return Object(c.b)(b,a({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Create and control checkbox.")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"This class is a JS wrapper around Qt's ",Object(c.b)("a",a({parentName:"strong"},{href:"https://doc.qt.io/qt-5/qcheckbox.html"}),"QCheckBox class"))),Object(c.b)("p",null,"A ",Object(c.b)("inlineCode",{parentName:"p"},"QCheckBox")," provides ability to add and manipulate native checkbox widgets."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"QCheckBox inherits from ",Object(c.b)("a",a({parentName:"strong"},{href:"/docs/api/NodeWidget"}),"NodeWidget"))),Object(c.b)("h3",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",a({parentName:"pre"},{className:"language-javascript"}),'const { QCheckBox } = require("@nodegui/nodegui");\n\nconst checkbox = new QCheckBox();\ncheckbox.setText("Hello");\n')),Object(c.b)("h3",{id:"new-qcheckboxparent"},Object(c.b)("inlineCode",{parentName:"h3"},"new QCheckBox(parent?)")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"parent")," NodeWidget (",Object(c.b)("em",{parentName:"li"},"optional"),"). Any widget inheriting from NodeWidget can be passed as a parent. This will make this widget, the child of the parent widget.")),Object(c.b)("h2",{id:"static-methods"},"Static Methods"),Object(c.b)("p",null,"QCheckBox can access all the static methods defined in ",Object(c.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget")),Object(c.b)("h2",{id:"instance-properties"},"Instance Properties"),Object(c.b)("p",null,"QCheckBox can access all the instance properties defined in ",Object(c.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget")),Object(c.b)("h2",{id:"instance-methods"},"Instance Methods"),Object(c.b)("p",null,"QCheckBox can access all the instance methods defined in ",Object(c.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget")),Object(c.b)("p",null,"Additionally it also has the following instance methods:"),Object(c.b)("h3",{id:"checkboxsettexttext"},Object(c.b)("inlineCode",{parentName:"h3"},"checkbox.setText(text)")),Object(c.b)("p",null,"Sets the given text to the checkbox."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"text")," string")),Object(c.b)("h3",{id:"checkboxischecked"},Object(c.b)("inlineCode",{parentName:"h3"},"checkbox.isChecked()")),Object(c.b)("p",null,"returns whether the checkbox is checked or not. It calls the native method ",Object(c.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qabstractbutton.html#checked-prop"}),"QAbstractButton: isChecked"),"."),Object(c.b)("h3",{id:"checkboxsetcheckedcheck"},Object(c.b)("inlineCode",{parentName:"h3"},"checkbox.setChecked(check)")),Object(c.b)("p",null,"This property holds whether the button is checked. It calls the native method ",Object(c.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qabstractbutton.html#checked-prop"}),"QAbstractButton: setChecked"),"."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"check")," boolean")))}h.isMDXComponent=!0}}]);