(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{161:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return b}));var i=n(0),a=n.n(i),l=a.a.createContext({}),d=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},r=function(e){var t=d(e.components);return a.a.createElement(l.Provider,{value:t},e.children)};var p="mdxType",o={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},c=Object(i.forwardRef)((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,r=e.parentName,p=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&-1===t.indexOf(i)&&(n[i]=e[i]);return n}(e,["components","mdxType","originalType","parentName"]),c=d(n),b=i,s=c[r+"."+b]||c[b]||o[b]||l;return n?a.a.createElement(s,Object.assign({},{ref:t},p,{components:n})):a.a.createElement(s,Object.assign({},{ref:t},p))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,d=new Array(l);d[0]=c;var r={};for(var o in t)hasOwnProperty.call(t,o)&&(r[o]=t[o]);r.originalType=e,r[p]="string"==typeof e?e:i,d[1]=r;for(var b=2;b<l;b++)d[b]=n[b];return a.a.createElement.apply(null,d)}return a.a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return d})),n.d(t,"rightToc",(function(){return r})),n.d(t,"default",(function(){return c}));n(0);var i=n(161);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d={sidebar_label:"QPlainTextEdit",title:"QPlainTextEdit"},r=[{value:"Example",id:"example",children:[]},{value:"new QPlainTextEdit(parent?)",id:"new-qplaintexteditparent",children:[]},{value:"Static Methods",id:"static-methods",children:[]},{value:"Instance Properties",id:"instance-properties",children:[{value:"plainTextEdit.placeholderText",id:"plaintexteditplaceholdertext",children:[]}]},{value:"Instance Methods",id:"instance-methods",children:[{value:"plainTextEdit.setPlainText(text)",id:"plaintexteditsetplaintexttext",children:[]},{value:"plainTextEdit.setPlaceholderText(text)",id:"plaintexteditsetplaceholdertexttext",children:[]},{value:"plainTextEdit.toPlainText()",id:"plaintextedittoplaintext",children:[]},{value:"plainTextEdit.setReadOnly(isReadOnly)",id:"plaintexteditsetreadonlyisreadonly",children:[]},{value:"plainTextEdit.clear()",id:"plaintexteditclear",children:[]},{value:"plainTextEdit.setWordWrapMode(mode)",id:"plaintexteditsetwordwrapmodemode",children:[]},{value:"plainTextEdit.wordWrapMode()",id:"plaintexteditwordwrapmode",children:[]},{value:"plainTextEdit.setLineWrapMode(mode)",id:"plaintexteditsetlinewrapmodemode",children:[]},{value:"plainTextEdit.lineWrapMode()",id:"plaintexteditlinewrapmode",children:[]}]}],p={rightToc:r},o="wrapper";function c(e){var t=e.components,n=l(e,["components"]);return Object(i.b)(o,a({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Used to edit and display plain text.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"This class is a JS wrapper around Qt's ",Object(i.b)("a",a({parentName:"strong"},{href:"https://doc.qt.io/qt-5/qplaintextedit.html"}),"QPlainTextEdit class"))),Object(i.b)("p",null,"A ",Object(i.b)("inlineCode",{parentName:"p"},"QPlainTextEdit")," provides ability to add and manipulate native editable text field widgets."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"QPlainTextEdit inherits from ",Object(i.b)("a",a({parentName:"strong"},{href:"/docs/api/NodeWidget"}),"NodeWidget"))),Object(i.b)("h3",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",a({parentName:"pre"},{className:"language-javascript"}),'const { QPlainTextEdit } = require("@nodegui/nodegui");\n\nconst plainTextEdit = new QPlainTextEdit();\n')),Object(i.b)("h3",{id:"new-qplaintexteditparent"},Object(i.b)("inlineCode",{parentName:"h3"},"new QPlainTextEdit(parent?)")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"parent")," NodeWidget (",Object(i.b)("em",{parentName:"li"},"optional"),"). Any widget inheriting from NodeWidget can be passed as a parent. This will make this widget, the child of the parent widget.")),Object(i.b)("h2",{id:"static-methods"},"Static Methods"),Object(i.b)("p",null,"QPlainTextEdit can access all the static methods defined in ",Object(i.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget")),Object(i.b)("h2",{id:"instance-properties"},"Instance Properties"),Object(i.b)("p",null,"QPlainTextEdit can access all the instance properties defined in ",Object(i.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget"),"."),Object(i.b)("h3",{id:"plaintexteditplaceholdertext"},Object(i.b)("inlineCode",{parentName:"h3"},"plainTextEdit.placeholderText")),Object(i.b)("p",null,"The placeholder text set on the plainTextEdit."),Object(i.b)("h2",{id:"instance-methods"},"Instance Methods"),Object(i.b)("p",null,"QPlainTextEdit can access all the instance methods defined in ",Object(i.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget"),"."),Object(i.b)("h3",{id:"plaintexteditsetplaintexttext"},Object(i.b)("inlineCode",{parentName:"h3"},"plainTextEdit.setPlainText(text)")),Object(i.b)("p",null,"Sets the given text to the plainTextEdit. It calls the native method ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qplaintextedit.html#setPlainText"}),"QPlainTextEdit: setPlainText"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"text")," string")),Object(i.b)("h3",{id:"plaintexteditsetplaceholdertexttext"},Object(i.b)("inlineCode",{parentName:"h3"},"plainTextEdit.setPlaceholderText(text)")),Object(i.b)("p",null,"Sets the given text to the plainTextEdit's placeholder."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"text")," string")),Object(i.b)("h3",{id:"plaintextedittoplaintext"},Object(i.b)("inlineCode",{parentName:"h3"},"plainTextEdit.toPlainText()")),Object(i.b)("p",null,"Returns the text of the text edit as plain text. ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qplaintextedit.html#toPlainText"}),"QPlainTextEdit: toPlainText"),"."),Object(i.b)("h3",{id:"plaintexteditsetreadonlyisreadonly"},Object(i.b)("inlineCode",{parentName:"h3"},"plainTextEdit.setReadOnly(isReadOnly)")),Object(i.b)("p",null,"Sets the plainTextEdit to be read only. ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qplaintextedit.html#readOnly-prop"}),"QPlainTextEdit: isReadOnly"),"."),Object(i.b)("h3",{id:"plaintexteditclear"},Object(i.b)("inlineCode",{parentName:"h3"},"plainTextEdit.clear()")),Object(i.b)("p",null,"Deletes all the text in the text edit.",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qplaintextedit.html#clear"}),"QPlainTextEdit: clear"),"."),Object(i.b)("h3",{id:"plaintexteditsetwordwrapmodemode"},Object(i.b)("inlineCode",{parentName:"h3"},"plainTextEdit.setWordWrapMode(mode)")),Object(i.b)("p",null,"This property holds the mode QPlainTextEdit will use when wrapping text by words.",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qplaintextedit.html#wordWrapMode-prop"}),"QPlainTextEdit: setWordWrapMode"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"mode: QTextOptionWrapMode")),Object(i.b)("h3",{id:"plaintexteditwordwrapmode"},Object(i.b)("inlineCode",{parentName:"h3"},"plainTextEdit.wordWrapMode()")),Object(i.b)("p",null,"returns word wrap mode. ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qplaintextedit.html#wordWrapMode-prop"}),"QPlainTextEdit: wordWrapMode"),"."),Object(i.b)("h3",{id:"plaintexteditsetlinewrapmodemode"},Object(i.b)("inlineCode",{parentName:"h3"},"plainTextEdit.setLineWrapMode(mode)")),Object(i.b)("p",null,"This property holds the line wrap mode. ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qplaintextedit.html#lineWrapMode-prop"}),"QPlainTextEdit: setLineWrapMode"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"mode: LineWrapMode")),Object(i.b)("h3",{id:"plaintexteditlinewrapmode"},Object(i.b)("inlineCode",{parentName:"h3"},"plainTextEdit.lineWrapMode()")),Object(i.b)("p",null,"returns line wrap mode. ",Object(i.b)("a",a({parentName:"p"},{href:"https://doc.qt.io/qt-5/qplaintextedit.html#lineWrapMode-prop"}),"QPlainTextEdit: setLineWrapMode"),"."))}c.isMDXComponent=!0}}]);