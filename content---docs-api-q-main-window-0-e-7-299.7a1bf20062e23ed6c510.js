(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{161:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return p}));var i=n(0),a=n.n(i),r=a.a.createContext({}),o=function(e){var t=a.a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},c=function(e){var t=o(e.components);return a.a.createElement(r.Provider,{value:t},e.children)};var d="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},s=Object(i.forwardRef)((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&-1===t.indexOf(i)&&(n[i]=e[i]);return n}(e,["components","mdxType","originalType","parentName"]),s=o(n),p=i,b=s[c+"."+p]||s[p]||l[p]||r;return n?a.a.createElement(b,Object.assign({},{ref:t},d,{components:n})):a.a.createElement(b,Object.assign({},{ref:t},d))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=s;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:i,o[1]=c;for(var p=2;p<r;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));n(0);var i=n(161);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o={sidebar_label:"QMainWindow",title:"QMainWindow"},c=[{value:"Example",id:"example",children:[]},{value:"Static Methods",id:"static-methods",children:[]},{value:"Instance Properties",id:"instance-properties",children:[{value:"win.layout",id:"winlayout",children:[]},{value:"win.centralWidget",id:"wincentralwidget",children:[]}]},{value:"Instance Methods",id:"instance-methods",children:[{value:"win.setCentralWidget(widget)",id:"winsetcentralwidgetwidget",children:[]}]}],d={rightToc:c},l="wrapper";function s(e){var t=e.components,n=r(e,["components"]);return Object(i.b)(l,a({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Create and control windows.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"This class is a JS wrapper around Qt's ",Object(i.b)("a",a({parentName:"strong"},{href:"https://doc.qt.io/qt-5/qmainwindow.html"}),"QMainWindow class"))),Object(i.b)("p",null,"A ",Object(i.b)("inlineCode",{parentName:"p"},"QMainWindow")," provides a main application window. Every widget in NodeGui should be a child/nested child of QMainWindow. QMainWindow in NodeGui is also responsible for FlexLayout calculations of its children."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"QMainWindow inherits from ",Object(i.b)("a",a({parentName:"strong"},{href:"/docs/api/NodeWidget"}),"NodeWidget"))),Object(i.b)("h3",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",a({parentName:"pre"},{className:"language-javascript"}),'const { QMainWindow, QWidget } = require("@nodegui/nodegui");\n\nconst win = new QMainWindow();\n\nconst centralWidget = new QWidget();\nwin.setCentralWidget(centralWidget);\n\nwin.show();\n\nglobal.win = win; // prevent\'s gc of win\n')),Object(i.b)("p",null,"QMainWindow needs to have a central widget set before other widgets can be added as a children/nested children.\nOnce a central widget is set you can add children/layout to the central widget."),Object(i.b)("h2",{id:"static-methods"},"Static Methods"),Object(i.b)("p",null,"QMainWindow can access all the static methods defined in ",Object(i.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget")),Object(i.b)("h2",{id:"instance-properties"},"Instance Properties"),Object(i.b)("p",null,"QMainWindow can access all the instance properties defined in ",Object(i.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget")),Object(i.b)("p",null,"Additionally it also has the following instance properties:"),Object(i.b)("h3",{id:"winlayout"},Object(i.b)("inlineCode",{parentName:"h3"},"win.layout")),Object(i.b)("p",null,"A ",Object(i.b)("inlineCode",{parentName:"p"},"NodeLayout")," representing current layout that is set on the window. If a centralWidget is set then the layout of central widget is returned."),Object(i.b)("h3",{id:"wincentralwidget"},Object(i.b)("inlineCode",{parentName:"h3"},"win.centralWidget")),Object(i.b)("p",null,"A ",Object(i.b)("inlineCode",{parentName:"p"},"NodeWidget")," representing currently set central widget on the window."),Object(i.b)("h2",{id:"instance-methods"},"Instance Methods"),Object(i.b)("p",null,"QMainWindow can access all the instance methods defined in ",Object(i.b)("a",a({parentName:"p"},{href:"/docs/api/NodeWidget"}),"NodeWidget")),Object(i.b)("p",null,"Additionally it also has the following instance methods:"),Object(i.b)("h3",{id:"winsetcentralwidgetwidget"},Object(i.b)("inlineCode",{parentName:"h3"},"win.setCentralWidget(widget)")),Object(i.b)("p",null,"Sets the given widget to be the main window's central widget."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"widget")," NodeWidget - Any widget that inherits from NodeWidget class.")))}s.isMDXComponent=!0}}]);