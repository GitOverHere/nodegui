(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{173:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return b}));var a=n(0),o=n.n(a),r=o.a.createContext({}),i=function(e){var t=o.a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},c=function(e){var t=i(e.components);return o.a.createElement(r.Provider,{value:t},e.children)};var l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,l=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),d=i(n),b=a,s=d[c+"."+b]||d[b]||p[b]||r;return n?o.a.createElement(s,Object.assign({},{ref:t},l,{components:n})):o.a.createElement(s,Object.assign({},{ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[l]="string"==typeof e?e:a,i[1]=c;for(var b=2;b<r;b++)i[b]=n[b];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));n(0);var a=n(173);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i={sidebar_label:"QClipboard",title:"QClipboard"},c=[{value:"Example",id:"example",children:[]},{value:"Static Methods",id:"static-methods",children:[]},{value:"Instance Properties",id:"instance-properties",children:[]},{value:"Instance Methods",id:"instance-methods",children:[{value:"clipboard.clear(mode)",id:"clipboardclearmode",children:[]},{value:"clipboard.setText(text, mode)",id:"clipboardsettexttext-mode",children:[]},{value:"clipboard.text(mode)",id:"clipboardtextmode",children:[]}]}],l={rightToc:c},p="wrapper";function d(e){var t=e.components,n=r(e,["components"]);return Object(a.b)(p,o({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"The QClipboard class provides access to the window system clipboard.")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"This class is a JS wrapper around Qt's ",Object(a.b)("a",o({parentName:"strong"},{href:"https://doc.qt.io/qt-5/QClipboard.html"}),"QClipboard class"))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"QClipboard inherits from ",Object(a.b)("a",o({parentName:"strong"},{href:"/docs/api/Component"}),"Component"))),Object(a.b)("h3",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-javascript"}),'const {\n  QClipboard,\n  QClipboardMode,\n  QApplication\n} = require("@nodegui/nodegui");\n\nconst clipboard = QApplication.clipboard();\nconst text = clipboard.text(QClipboardMode.Clipboard);\n')),Object(a.b)("h2",{id:"static-methods"},"Static Methods"),Object(a.b)("p",null,"QClipboard can access all the static methods defined in ",Object(a.b)("a",o({parentName:"p"},{href:"/docs/api/Component"}),"Component")),Object(a.b)("h2",{id:"instance-properties"},"Instance Properties"),Object(a.b)("p",null,"QClipboard can access all the instance properties defined in ",Object(a.b)("a",o({parentName:"p"},{href:"/docs/api/Component"}),"Component")),Object(a.b)("h2",{id:"instance-methods"},"Instance Methods"),Object(a.b)("p",null,"QClipboard can access all the instance methods defined in ",Object(a.b)("a",o({parentName:"p"},{href:"/docs/api/Component"}),"Component"),". Additionally it has:"),Object(a.b)("h3",{id:"clipboardclearmode"},Object(a.b)("inlineCode",{parentName:"h3"},"clipboard.clear(mode)")),Object(a.b)("p",null,"Clear the clipboard contents. It calls the native method ",Object(a.b)("a",o({parentName:"p"},{href:"https://doc.qt.io/qt-5/qclipboard.html#clear"}),"QClipboard: clear"),"."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"mode")," - This enum type is used to control which part of the system clipboard is used. See ",Object(a.b)("a",o({parentName:"li"},{href:"https://doc.qt.io/qt-5/qclipboard.html#Mode-enum"}),"https://doc.qt.io/qt-5/qclipboard.html#Mode-enum"))),Object(a.b)("h3",{id:"clipboardsettexttext-mode"},Object(a.b)("inlineCode",{parentName:"h3"},"clipboard.setText(text, mode)")),Object(a.b)("p",null,"Copies text into the clipboard as plain text. It calls the native method ",Object(a.b)("a",o({parentName:"p"},{href:"https://doc.qt.io/qt-5/qclipboard.html#setText"}),"QClipboard: setText"),"."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("inlineCode",{parentName:"p"},"text")," - The text you want to copy to clipboard.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("inlineCode",{parentName:"p"},"mode")," - This enum type is used to control which part of the system clipboard is used. See ",Object(a.b)("a",o({parentName:"p"},{href:"https://doc.qt.io/qt-5/qclipboard.html#Mode-enum"}),"https://doc.qt.io/qt-5/qclipboard.html#Mode-enum")))),Object(a.b)("h3",{id:"clipboardtextmode"},Object(a.b)("inlineCode",{parentName:"h3"},"clipboard.text(mode)")),Object(a.b)("p",null,"Returns the clipboard text as plain text, or an empty string if the clipboard does not contain any text. It calls the native method ",Object(a.b)("a",o({parentName:"p"},{href:"https://doc.qt.io/qt-5/qclipboard.html#text"}),"QClipboard: text"),"."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"mode")," - This enum type is used to control which part of the system clipboard is used. See ",Object(a.b)("a",o({parentName:"li"},{href:"https://doc.qt.io/qt-5/qclipboard.html#Mode-enum"}),"https://doc.qt.io/qt-5/qclipboard.html#Mode-enum"))))}d.isMDXComponent=!0}}]);